function my_pca(~,~,fig)

h = guidata(fig);

% just do pca on all data

% first get trial-averaged psths
probe = get(h.probeList, 'Value');

tmin = str2double(get(h.tmin, 'String'));
tmax = str2double(get(h.tmax, 'String'));

dt = 0.005;
edges = tmin:0.005:tmax;

tm = edges + dt./2;
tm = tm(1:end-1);

sm = str2double(get(h.smoothing, 'String'));

psth = zeros(length(tm),numel(h.obj.clu{probe}));
cluPSTH = zeros(length(tm),numel(h.obj.clu{probe}),numel(h.filt.N));
for clu = 1:numel(h.obj.clu{probe})
    for i = 1:h.filt.N
        
        trix = find(h.filt.ix(:,i));
        spkix = ismember(h.obj.clu{probe}(clu).trial, trix);

        if h.align
            N = histc(h.obj.clu{probe}(clu).trialtm_aligned(spkix), edges);
        else
            N = histc(h.obj.clu{probe}(clu).trialtm(spkix), edges);
        end

        N = N(1:end-1);

        cluPSTH(:,clu,i) = MySmooth(N./numel(trix)./dt, sm);  % trial-averaged separated by trial type
    end
end

psth = mean(cluPSTH,3); % trial-averaged over all trial types


% perform pca, plot projections
[coeff,proj,~,~,explained] = pca(psth);
figure;
plot(proj(:,1:3))
figure;
plot3(proj(:,1),proj(:,2),proj(:,3));
xlabel('mode 1')
ylabel('mode 2')
zlabel('mode 3')

'hi'

end % my_pca

